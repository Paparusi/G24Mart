'use client';

import { useState } from 'react';
import { Store, Coffee, Scissors, Hotel, ShoppingCart, Car } from 'lucide-react';

interface IndustryConfig {
  id: string;
  name: string;
  icon: React.ReactNode;
  color: string;
  features: string[];
  templates: string[];
}

const INDUSTRIES: IndustryConfig[] = [
  {
    id: 'retail',
    name: 'B√°n l·∫ª t·ªïng h·ª£p',
    icon: <Store className="w-8 h-8" />,
    color: 'bg-blue-500',
    features: ['Qu·∫£n l√Ω kho', 'POS', 'Khuy·∫øn m√£i', 'ƒêa k√™nh b√°n h√†ng'],
    templates: ['Si√™u th·ªã mini', 'C·ª≠a h√†ng ti·ªán l·ª£i', 'C·ª≠a h√†ng t·∫°p h√≥a']
  },
  {
    id: 'fnb',
    name: 'Nh√† h√†ng - Caf√©',
    icon: <Coffee className="w-8 h-8" />,
    color: 'bg-orange-500',
    features: ['Qu·∫£n l√Ω b√†n', 'ƒê·∫∑t m√≥n', 'B·∫øp th√¥ng minh', 'Giao h√†ng'],
    templates: ['Nh√† h√†ng', 'Caf√©', 'Fast food', 'Qu√°n ƒÉn']
  },
  {
    id: 'beauty',
    name: 'L√†m ƒë·∫πp - Spa',
    icon: <Scissors className="w-8 h-8" />,
    color: 'bg-pink-500',
    features: ['ƒê·∫∑t l·ªãch', 'Qu·∫£n l√Ω d·ªãch v·ª•', 'ChƒÉm s√≥c kh√°ch h√†ng', 'G√≥i li·ªáu tr√¨nh'],
    templates: ['Salon t√≥c', 'Spa', 'Nail', 'Th·∫©m m·ªπ vi·ªán']
  },
  {
    id: 'hotel',
    name: 'Kh√°ch s·∫°n - Du l·ªãch',
    icon: <Hotel className="w-8 h-8" />,
    color: 'bg-purple-500',
    features: ['ƒê·∫∑t ph√≤ng', 'Check-in/out', 'Qu·∫£n l√Ω ph√≤ng', 'D·ªãch v·ª•'],
    templates: ['Kh√°ch s·∫°n', 'Homestay', 'Resort', 'Motel']
  },
  {
    id: 'ecommerce',
    name: 'Th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠',
    icon: <ShoppingCart className="w-8 h-8" />,
    color: 'bg-green-500',
    features: ['Website b√°n h√†ng', 'T√≠ch h·ª£p s√†n TMDT', 'Livestream', 'Digital Marketing'],
    templates: ['Shop online', 'Dropshipping', 'B2B', 'Marketplace']
  },
  {
    id: 'automotive',
    name: '√î t√¥ - Xe m√°y',
    icon: <Car className="w-8 h-8" />,
    color: 'bg-gray-500',
    features: ['Qu·∫£n l√Ω xe', 'B·∫£o d∆∞·ª°ng', 'Ph·ª• t√πng', 'B·∫£o h√†nh'],
    templates: ['ƒê·∫°i l√Ω xe', 'Garage', 'C·ª≠a h√†ng ph·ª• t√πng', 'R·ª≠a xe']
  }
];

export default function MultiIndustrySupport() {
  const [selectedIndustry, setSelectedIndustry] = useState<IndustryConfig | null>(null);
  const [isConfiguring, setIsConfiguring] = useState(false);

  const configureIndustry = (industry: IndustryConfig) => {
    setSelectedIndustry(industry);
    setIsConfiguring(true);
    
    // Simulate configuration process
    setTimeout(() => {
      setIsConfiguring(false);
      alert(`ƒê√£ c·∫•u h√¨nh th√†nh c√¥ng cho ng√†nh ${industry.name}! üéâ`);
    }, 2000);
  };

  return (
    <div className="p-6 bg-white rounded-lg shadow-lg">
      <div className="text-center mb-8">
        <h2 className="text-3xl font-bold text-gray-800 mb-4">
          üè¢ Gi·∫£i ph√°p ƒëa ng√†nh h√†ng
        </h2>
        <p className="text-gray-600">
          G24Mart h·ªó tr·ª£ 20+ ng√†nh h√†ng v·ªõi t√≠nh nƒÉng chuy√™n bi·ªát cho t·ª´ng lƒ©nh v·ª±c
        </p>
      </div>

      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        {INDUSTRIES.map((industry) => (
          <div
            key={industry.id}
            className="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-lg transition-shadow cursor-pointer"
            onClick={() => configureIndustry(industry)}
          >
            <div className={`${industry.color} w-16 h-16 rounded-lg flex items-center justify-center text-white mb-4 mx-auto`}>
              {industry.icon}
            </div>
            
            <h3 className="text-xl font-semibold text-center mb-3">
              {industry.name}
            </h3>
            
            <div className="space-y-2 mb-4">
              <h4 className="font-medium text-gray-700">T√≠nh nƒÉng ch√≠nh:</h4>
              <ul className="text-sm text-gray-600 space-y-1">
                {industry.features.map((feature, index) => (
                  <li key={index} className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    {feature}
                  </li>
                ))}
              </ul>
            </div>
            
            <div className="space-y-2">
              <h4 className="font-medium text-gray-700">M·∫´u c√≥ s·∫µn:</h4>
              <div className="flex flex-wrap gap-1">
                {industry.templates.map((template, index) => (
                  <span
                    key={index}
                    className="text-xs bg-gray-100 text-gray-700 px-2 py-1 rounded-full"
                  >
                    {template}
                  </span>
                ))}
              </div>
            </div>
            
            <button className={`w-full mt-4 ${industry.color} text-white px-4 py-2 rounded-lg hover:opacity-90 transition-opacity`}>
              C·∫•u h√¨nh ng√†nh n√†y
            </button>
          </div>
        ))}
      </div>

      {isConfiguring && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-8 max-w-md">
            <div className="text-center">
              <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
              <h3 className="text-xl font-semibold mb-2">ƒêang c·∫•u h√¨nh...</h3>
              <p className="text-gray-600">
                ƒêang t√πy ch·ªânh giao di·ªán v√† t√≠nh nƒÉng cho ng√†nh {selectedIndustry?.name}
              </p>
            </div>
          </div>
        </div>
      )}

      <div className="mt-8 p-6 bg-gradient-to-r from-blue-50 to-green-50 rounded-lg">
        <div className="text-center">
          <h3 className="text-xl font-semibold mb-2">üöÄ V∆∞·ª£t tr·ªôi h∆°n KiotViet</h3>
          <div className="grid md:grid-cols-2 gap-4 mt-4">
            <div className="text-left">
              <h4 className="font-medium text-green-600 mb-2">‚úÖ G24Mart</h4>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ Kh√¥ng c·∫ßn ƒëƒÉng nh·∫≠p ph·ª©c t·∫°p</li>
                <li>‚Ä¢ Ho·∫°t ƒë·ªông offline 100%</li>
                <li>‚Ä¢ Kh√¥ng b·ªã downtime</li>
                <li>‚Ä¢ Mi·ªÖn ph√≠ ho√†n to√†n</li>
                <li>‚Ä¢ T√πy ch·ªânh kh√¥ng gi·ªõi h·∫°n</li>
              </ul>
            </div>
            <div className="text-left">
              <h4 className="font-medium text-red-600 mb-2">‚ùå KiotViet</h4>
              <ul className="text-sm space-y-1">
                <li>‚Ä¢ C·∫ßn ƒëƒÉng nh·∫≠p, c√≥ th·ªÉ qu√™n m·∫≠t kh·∫©u</li>
                <li>‚Ä¢ Ph·ª• thu·ªôc internet</li>
                <li>‚Ä¢ Hay b·ªã l·ªói 503 (nh∆∞ hi·ªán t·∫°i)</li>
                <li>‚Ä¢ C√≥ ph√≠ d·ªãch v·ª• h√†ng th√°ng</li>
                <li>‚Ä¢ H·∫°n ch·∫ø t√πy ch·ªânh</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
